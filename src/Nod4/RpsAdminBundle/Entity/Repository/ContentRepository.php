<?php

namespace Nod4\RpsAdminBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\EntityManager;

/**
 * ContentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContentRepository extends EntityRepository
{
    /**
     * ContentRepository constructor.
     * @param EntityManager $em
     * @param Mapping\ClassMetadata $class
     */
    public function __construct(EntityManager $em, Mapping\ClassMetadata $class)
    {
        parent::__construct($em, $class);
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'Nod4\RpsAdminBundle\DQL\DqlYear');
    }


    /**
     * Рендерит  content на страницу для пагинации
     * @param $year год
     * @param $page страница
     * @param $category категория
     * @param $limitPerPage кол-во на странице
     * @return array
     */
    public function findCategoryPageByYear($category , $year, $page, $limitPerPage) {


        $page = $this->isPage($page);
        $limit=$limitPerPage;
        $offset=$limitPerPage*($page-1);
        $qb = $this->createQueryBuilder('content')
            ->where('YEAR(content.dateUpdate ) = :year')
            ->setParameter('year',$year)
            ->orderBy('content.dateUpdate', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit);
        if($category) {
            $qb->andWhere('content.category IN (:category)')->setParameter('category', $category);
        }


        return $qb->getQuery()
            ->getResult();
    }

    /**
     * Количество новостей за указанный год
     * @param $year год
     * @param $category категория
     * @return mixed|null
     */
    public function count($category,$year) {

        $qb = $this->createQueryBuilder('content')
            ->select('COUNT(content.id)')
            ->where('YEAR(content.dateUpdate ) = :year')
            ->andWhere('content.category = :category')
            ->setParameter('category',$category)
            ->setParameter('year',$year);
        try {
            $count = $qb->getQuery()->getSingleScalarResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            /* Your stuffs.. */
        }
        return $count!=NULL ? $count : NULL;
    }


    /**
     * @param $page
     * @return int
     */
    private function isPage($page) {
        return $page !=NULL ? $page : 1 ;
    }


}
